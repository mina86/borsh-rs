---
source: borsh-derive/src/internals/schema/enums/mod.rs
expression: pretty_print_syn_str(&actual).unwrap()
---
impl borsh::BorshSchema for X {
    fn declaration() -> borsh::schema::Declaration {
        "X".to_string()
    }
    fn add_definitions_recursively(
        definitions: &mut borsh::__private::maybestd::collections::BTreeMap<
            borsh::schema::Declaration,
            borsh::schema::Definition,
        >,
    ) {
        <() as borsh::BorshSchema>::add_definitions_recursively(definitions);
        <() as borsh::BorshSchema>::add_definitions_recursively(definitions);
        <() as borsh::BorshSchema>::add_definitions_recursively(definitions);
        <() as borsh::BorshSchema>::add_definitions_recursively(definitions);
        <() as borsh::BorshSchema>::add_definitions_recursively(definitions);
        <() as borsh::BorshSchema>::add_definitions_recursively(definitions);
        let discriminant_0: u8 = 0;
        let discriminant_1: u8 = 20;
        let discriminant_2: u8 = 20 + 1;
        let discriminant_3: u8 = 20 + 1 + 1;
        let discriminant_4: u8 = 10;
        let discriminant_5: u8 = 10 + 1;
        let definition = borsh::schema::Definition::Enum {
            tag_width: 1,
            variants: borsh::__private::maybestd::vec![
                (discriminant_0 as i64, "A".into(), < () as borsh::BorshSchema >
                ::declaration(),), (discriminant_1 as i64, "B".into(), < () as
                borsh::BorshSchema > ::declaration(),), (discriminant_2 as i64, "C"
                .into(), < () as borsh::BorshSchema > ::declaration(),), (discriminant_3
                as i64, "D".into(), < () as borsh::BorshSchema > ::declaration(),),
                (discriminant_4 as i64, "E".into(), < () as borsh::BorshSchema >
                ::declaration(),), (discriminant_5 as i64, "F".into(), < () as
                borsh::BorshSchema > ::declaration(),)
            ],
        };
        borsh::schema::add_definition(
            <Self as borsh::BorshSchema>::declaration(),
            definition,
            definitions,
        );
    }
}

